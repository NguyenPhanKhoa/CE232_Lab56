{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Downloads\\\\CE232_Lab5-main\\\\CE232_Lab5-main\\\\web2\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`).then(res => setData(res.data)).catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n  }, []);\n\n  // function fetchData (){\n  //   fetch('http://localhost:4001/data')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log(data);\n  //       setData(data);\n  //     })\n  //     .catch((error) => console.error('Error:', error));\n  // }\n\n  autoRefresh({\n    dataFuntion: fetchData,\n    onComplete: setData,\n    interval: 2000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 400,\n      data: data,\n      margin: {\n        top: 5,\n        right: 20,\n        left: 10,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"humidity\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nconst autoRefresh = ({\n  dataFuntion,\n  onComplete,\n  interval = 10000\n}) => {\n  const execute = () => {\n    dataFuntion().then(data => {\n      console.log(1);\n      onComplete(data);\n      setTimeout(execute, interval);\n    });\n  };\n  execute();\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","CartesianGrid","Tooltip","axios","jsxDEV","_jsxDEV","App","_s","data","setData","interval","setInterval","get","then","res","catch","err","console","error","autoRefresh","dataFuntion","fetchData","onComplete","children","width","height","margin","top","right","left","bottom","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","stroke","type","_c","execute","log","setTimeout","$RefreshReg$"],"sources":["C:/Users/louis/Downloads/CE232_Lab5-main/CE232_Lab5-main/web2/app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {LineChart, Line, XAxis, CartesianGrid, Tooltip,} from 'recharts';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState([])\n  useEffect(()=>{\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`)\n        .then(res => setData(res.data))\n        .catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n  },[])\n\n  // function fetchData (){\n  //   fetch('http://localhost:4001/data')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log(data);\n  //       setData(data);\n  //     })\n  //     .catch((error) => console.error('Error:', error));\n  // }\n\n  autoRefresh({\n    dataFuntion: fetchData,\n    onComplete: setData,\n    interval: 2000,\n  });\n\n  return (\n    <div>\n      {}\n      <LineChart width={1000} height={400} data={data}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}>\n        <XAxis dataKey=\"id\" />\n        <Tooltip />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\n        <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </div>\n  );\n}\n\nconst autoRefresh = ({dataFuntion, onComplete, interval = 10000}) =>{\n  const execute = () => {\n    dataFuntion().then(data => {\n      console.log(1);\n      onComplete(data);\n      setTimeout(execute, interval);\n    });\n  };\n\n  execute();\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}