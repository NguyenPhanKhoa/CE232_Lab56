{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Downloads\\\\CE232_Lab5-main\\\\CE232_Lab5-main\\\\web2\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`).then(res => setData(res.data)).catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 400,\n      data: data,\n      margin: {\n        top: 5,\n        right: 20,\n        left: 10,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"humidity\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","CartesianGrid","Tooltip","axios","jsxDEV","_jsxDEV","App","_s","data","setData","interval","setInterval","get","then","res","catch","err","console","error","clearInterval","children","width","height","margin","top","right","left","bottom","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","stroke","type","_c","$RefreshReg$"],"sources":["C:/Users/louis/Downloads/CE232_Lab5-main/CE232_Lab5-main/web2/app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {LineChart, Line, XAxis, CartesianGrid, Tooltip,} from 'recharts';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState([])\n  useEffect(()=>{\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`)\n        .then(res => setData(res.data))\n        .catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n    return () => clearInterval(interval);\n  },[])\n\n  return (\n    <div>\n      {}\n      <LineChart width={1000} height={400} data={data}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}>\n        <XAxis dataKey=\"id\" />\n        <Tooltip />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\n        <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,QAAQ,UAAU;AACxE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAI;IACZ,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCR,KAAK,CAACS,GAAG,CAAE,4BAA2B,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIL,OAAO,CAACK,GAAG,CAACN,IAAI,CAAC,CAAC,CAC9BO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACrC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAMG,aAAa,CAACT,QAAQ,CAAC;EACtC,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEL,OAAA;IAAAe,QAAA,eAEEf,OAAA,CAACP,SAAS;MAACuB,KAAK,EAAE,IAAK;MAACC,MAAM,EAAE,GAAI;MAACd,IAAI,EAAEA,IAAK;MAC9Ce,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACnDf,OAAA,CAACL,KAAK;QAAC4B,OAAO,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtB3B,OAAA,CAACH,OAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX3B,OAAA,CAACJ,aAAa;QAACgC,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClC3B,OAAA,CAACN,IAAI;QAACmC,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,aAAa;QAACK,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/D3B,OAAA,CAACN,IAAI;QAACmC,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,UAAU;QAACK,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACzB,EAAA,CAxBQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}