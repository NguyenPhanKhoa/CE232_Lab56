{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Downloads\\\\CE232_Lab5-main\\\\CE232_Lab5-main\\\\web2\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Server\n} = require('socket.io');\nconst io = new Server({\n  cors: {\n    origin: \"*\"\n  }\n});\nio.on(\"connection\", socket => {\n  socket.emit('dataupdate', data);\n});\nfunction App() {\n  _s();\n  const socket = io('http://localhost:4001');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    console.log('hello');\n  }, []);\n  function fetchData() {\n    fetch('http://localhost:4001/data').then(response => response.json()).then(data => {\n      console.log(data);\n      setData(data);\n    }).catch(error => console.error('Error:', error));\n  }\n  autoRefresh({\n    dataFuntion: fetchData,\n    onComplete: setData,\n    interval: 2000\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 400,\n      data: data,\n      margin: {\n        top: 5,\n        right: 20,\n        left: 10,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"humidity\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nconst autoRefresh = ({\n  dataFuntion,\n  onComplete,\n  interval = 10000\n}) => {\n  const execute = () => {\n    dataFuntion().then(data => {\n      console.log(1);\n      onComplete(data);\n      setTimeout(execute, interval);\n    });\n  };\n  execute();\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","CartesianGrid","Tooltip","jsxDEV","_jsxDEV","Server","require","io","cors","origin","on","socket","emit","data","App","_s","setData","fetchData","console","log","fetch","then","response","json","catch","error","autoRefresh","dataFuntion","onComplete","interval","children","width","height","margin","top","right","left","bottom","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","stroke","type","_c","execute","setTimeout","$RefreshReg$"],"sources":["C:/Users/louis/Downloads/CE232_Lab5-main/CE232_Lab5-main/web2/app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {LineChart, Line, XAxis, CartesianGrid, Tooltip,} from 'recharts';\nconst {Server} = require('socket.io');\n\nconst io = new Server({\n  cors: {\n    origin: \"*\",\n  }\n});\n\nio.on(\"connection\", (socket)=>{\n  socket.emit('dataupdate', data)\n})\n\nfunction App() {\n  const socket = io('http://localhost:4001')\n\n  const [data, setData] = useState([])\n  useEffect(()=>{\n    fetchData()\n    console.log('hello')\n  },[])\n\n  function fetchData (){\n    fetch('http://localhost:4001/data')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setData(data);\n      })\n      .catch((error) => console.error('Error:', error));\n  }\n\n  autoRefresh({\n    dataFuntion: fetchData,\n    onComplete: setData,\n    interval: 2000,\n  });\n\n  return (\n    <div>\n      {}\n      <LineChart width={1000} height={400} data={data}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}>\n        <XAxis dataKey=\"id\" />\n        <Tooltip />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\n        <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </div>\n  );\n}\n\nconst autoRefresh = ({dataFuntion, onComplete, interval = 10000}) =>{\n  const execute = () => {\n    dataFuntion().then(data => {\n      console.log(1);\n      onComplete(data);\n      setTimeout(execute, interval);\n    });\n  };\n\n  execute();\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzE,MAAM;EAACC;AAAM,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAErC,MAAMC,EAAE,GAAG,IAAIF,MAAM,CAAC;EACpBG,IAAI,EAAE;IACJC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEFF,EAAE,CAACG,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAG;EAC5BA,MAAM,CAACC,IAAI,CAAC,YAAY,EAAEC,IAAI,CAAC;AACjC,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMJ,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;EAE1C,MAAM,CAACM,IAAI,EAAEG,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAI;IACZoB,SAAS,CAAC,CAAC;IACXC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EAEL,SAASF,SAASA,CAAA,EAAG;IACnBG,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACR,IAAI,IAAI;MACZK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjBG,OAAO,CAACH,IAAI,CAAC;IACf,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACrD;EAEAC,WAAW,CAAC;IACVC,WAAW,EAAEV,SAAS;IACtBW,UAAU,EAAEZ,OAAO;IACnBa,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,oBACEzB,OAAA;IAAA0B,QAAA,eAEE1B,OAAA,CAACN,SAAS;MAACiC,KAAK,EAAE,IAAK;MAACC,MAAM,EAAE,GAAI;MAACnB,IAAI,EAAEA,IAAK;MAC9CoB,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACnD1B,OAAA,CAACJ,KAAK;QAACsC,OAAO,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtBtC,OAAA,CAACF,OAAO;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXtC,OAAA,CAACH,aAAa;QAAC0C,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCtC,OAAA,CAACL,IAAI;QAAC6C,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,aAAa;QAACK,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DtC,OAAA,CAACL,IAAI;QAAC6C,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC,UAAU;QAACK,MAAM,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC3B,EAAA,CAtCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAwCZ,MAAMY,WAAW,GAAGA,CAAC;EAACC,WAAW;EAAEC,UAAU;EAAEC,QAAQ,GAAG;AAAK,CAAC,KAAI;EAClE,MAAMiB,OAAO,GAAGA,CAAA,KAAM;IACpBnB,WAAW,CAAC,CAAC,CAACN,IAAI,CAACR,IAAI,IAAI;MACzBK,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MACdS,UAAU,CAACf,IAAI,CAAC;MAChBkC,UAAU,CAACD,OAAO,EAAEjB,QAAQ,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EAEDiB,OAAO,CAAC,CAAC;AACX,CAAC;AAED,eAAehC,GAAG;AAAC,IAAA+B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}