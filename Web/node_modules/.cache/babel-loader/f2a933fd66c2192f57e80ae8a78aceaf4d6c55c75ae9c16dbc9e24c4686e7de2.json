{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Downloads\\\\CE232_Lab5-main\\\\CE232_Lab5-main\\\\web2\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, YAxis, Legend } from 'recharts';\nimport axios from 'axios';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`).then(res => setData(res.data)).catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Title\",\n      children: \"Nhi\\u1EC7t \\u0111\\u1ED9, \\u0111\\u1ED9 \\u1EA9m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 730,\n      height: 250,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        name: \"temperature\",\n        type: \"monotone\",\n        dataKey: \"temperature\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 730,\n      height: 250,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        displayName: \"humidity: %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        name: \"humidity\",\n        type: \"monotone\",\n        dataKey: \"humidity\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","CartesianGrid","Tooltip","YAxis","Legend","axios","jsxDEV","_jsxDEV","App","_s","data","setData","interval","setInterval","get","then","res","catch","err","console","error","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","dataKey","stroke","name","type","displayName","strokeDasharray","_c","$RefreshReg$"],"sources":["C:/Users/louis/Downloads/CE232_Lab5-main/CE232_Lab5-main/web2/app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {LineChart, Line, XAxis, CartesianGrid, Tooltip, YAxis, Legend} from 'recharts';\nimport axios from 'axios';\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([])\n  useEffect(()=>{\n    const interval = setInterval(() => {\n      axios.get(`http://localhost:4001/data`)\n        .then(res => setData(res.data))\n        .catch(err => console.error(err));\n    }, 5000); //set your time here. repeat every 5 seconds\n    return () => clearInterval(interval);\n  },[])\n\n  return (\n    <div>\n      <h1 className =\"Title\">Nhiệt độ, độ ẩm</h1>\n      <LineChart width={730} height={250} data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <XAxis dataKey=\"id\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Line name = 'temperature' type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\n      </LineChart>\n\n      <LineChart width={730} height={250} data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <XAxis dataKey=\"id\" />\n        <YAxis dataKey= \"humidity\"/>\n        <Tooltip />\n        <Legend displayName='humidity: %'/>\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f5f5f5\" />\n        <Line name = 'humidity' type=\"monotone\" dataKey=\"humidity\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}